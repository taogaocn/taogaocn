---
layout: post
category: "learn"
title:  "研究流程总结"
tags: [计算机, 研究, 工作流程]
---
我目前主要从事高性能计算方面的研究工作，是一名博士研究生。
在研究的过程中，由于不太重视梳理工作流程，走了不少弯路，因而有一些体会。
在此总结，方便今后参考，如果能够有幸对别人起到帮助作用，那就更好了。
由于我的研究方向侧重于软件方面，因而不一定适用所有计算机方面的研究。

### 计算机研究工作流
为什么我们需要工作流程呢？首先，工作流程提醒我们时刻聚焦目标，这样就
不容易被干扰。有时一项研究工作的周期比较长且有较大的编码量，可能在编码的
过程中就慢慢忽略了主要目标，而在一些无关紧要的问题上浪费时间和精力。
其次，工作流程能够帮助我们规范化研究过程，有助于研究成果的积累和传承。
我个人以前经常是在发表完文章后，就万事大吉了，代码和文档都乱七八糟。
过一段时间，自己或别人想在这项研究基础上继续时，才发现无法快速重现整
个研究过程。最近注意到这不仅仅是我个人的问题，甚至一些很有名的研究人员
都存在这样的问题，这个问题也慢慢得得到了研究社区的关注。

本文中用代码表示解决研究问题的核心代码，用脚本表示辅助程序执行或画图的代码
（因为这些代码通常用脚本语言实现，如Python和Linux shell程序）。

工作流程如下图所示，通常一项研究工作包括准备阶段、实验阶段、分析阶段和
总结阶段，下面分别简单介绍。

<img src="http://github.com/taogaocn/taogaocn/raw/master/figures/workflow.png" width="600"/>

### 准备阶段
准备阶段主要包括发现问题和提出解决方案，其中发现问题是整个研究的起点。
发现问题的途径很多，比如阅读文献或者做实验分析等等。一旦发现了某个值得研究的问题，
我们就可以尝试着提出解决方案。在正式开始编码实现这个解决方案之前，最好对该方案
进行评估，因为有时提出的方案无法达到预期效果，这样就可以避免重复劳动。评估得方法
可以是理论分析也可以是实现一些简单的程序模拟分析。

### 实验阶段
一旦找到了需要解决的问题，提出了解决方案，并且对方案进行了评估，我们就需要实现
并且验证这个方案。这个过程主要包括编码实现、执行程序、收集结果以及分析和可视化结果。

在方案确定的前提下，编码实现通过是相对比较比较容易的，只是可能需要耗费大量时间和精力。
代码编写好之后，需要执行并且收集结果，这一步需要注意得是尽量把代码的执行脚本化，即
利用脚本自动完成代码的执行和收集结果的工作。手动执行并收集结果得最大问题是效率低下。
由于我的研究主要在Linux系统上完成，执行脚本通常用Linux shell程序实现。一旦获得了数据，
就需要分析数据并且画出相应的图形。这一步需要注意得也是尽量使得画图工作脚本化。这样一
旦发现本次运行存在错误，重新获得数据之后，可以快速画图。画图脚本个人推荐使用Python
matplotlib实现。

实验阶段是一个不断迭代的过程，分析完数据之后，可能发现程序实现或执行中存在错误，
因而又需要重新修改程序、执行并收集结果，把整个过程脚本化得好处是能够提高工作效率，
避免重复劳动。

### 分析阶段
一旦收集到一组具有意义的结果并且完成了画图等可视化工作，我们就需要对该结果进行详细分析。
分析阶段需要注意得是做好文档化工作，即把结果用文档（推荐用PPT幻灯片）记录下来，这样可以
方便和别人交流讨论。交流讨论也是分析阶段很重要的一部分，交流得对象可能是导师或者其它合
作者，交流可以避免陷入自己的思维误区。通过分析，如果发现原有方案存在较大缺陷或实验结果和
预期相差甚远，则可能需要对原有方案进行修正，然后重新回到实验阶段的迭代中。

### 总结阶段
如果实验结果证明很好地解决了目标问题，那么就可以进入总结阶段了。这个阶段的主要工作是撰写
学术论文。另外，还需要对本项研究的代码、脚本和数据进行整理归档。如果研究是公开的，则推荐
把这些资料开源。

### 需要注意的问题
1. 发现问题和评估方案之前不要急于编码，不然很可能重复劳动；
2. 代码、脚本和数据一定要进行版本控制，推荐使用Git；
3. 尽量把所有能够自动化得工作全部脚本化；
4. 注意代码的编码风格，宁可慢一点也要保证代码简洁清楚；
5. 定期的交流讨论很重要。

### 参考资料
数据流程图参考了这个链接 [link](http://cacm.acm.org/blogs/blog-cacm/169199-data-science-workflow-overview-and-challenges/fulltext).
